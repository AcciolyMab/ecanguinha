# ===============================
# üöß Est√°gio 1: Build das depend√™ncias
# ===============================
FROM python:3.10-slim AS builder

WORKDIR /app

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# Instala depend√™ncias do sistema
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Instala depend√™ncias Python
COPY requirements.txt .
RUN pip wheel --no-cache-dir --wheel-dir /wheels -r requirements.txt

# ===============================
# üöÄ Est√°gio 2: Imagem final da aplica√ß√£o
# ===============================
FROM python:3.10-slim

WORKDIR /app

# Define vari√°veis de ambiente
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DJANGO_SETTINGS_MODULE=canguinaProject.settings \
    ENVIRONMENT=production \
    PYTHONPATH="/app"

# Cria um usu√°rio n√£o-root para rodar a aplica√ß√£o
RUN addgroup --system app && adduser --system --group app

# Instala as depend√™ncias pr√©-compiladas
COPY --from=builder /wheels /wheels
COPY --from=builder /app/requirements.txt .
RUN pip install --no-cache-dir /wheels/*

# Copia os arquivos da aplica√ß√£o
COPY . .

# D√° a propriedade dos arquivos para o novo usu√°rio
RUN chown -R app:app /app

# Muda para o usu√°rio n√£o-root
USER app

# Exp√µe a porta
EXPOSE 8000