"""
Django settings for canguinaProject project.
Generated by 'django-admin startproject' using Django 5.1.2.
"""

from pathlib import Path
import os
from decouple import config
import logging
import dj_database_url
from canguinaProject.utils import testar_redis_em_debug

logger = logging.getLogger(__name__)
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "canguinaProject.settings")

BASE_DIR = Path(__file__).resolve().parent.parent

# ========================
# üîê SEGURAN√áA
# ========================
SECRET_KEY = config('SECRET_KEY', default='django-insecure-placeholder')
DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = [
    'localhost', '127.0.0.1', '0.0.0.0',
    'canguinhaal.com.br', 'www.canguinhaal.com.br',
    'web-production-6a008.up.railway.app', '.railway.app',
]

CSRF_TRUSTED_ORIGINS = [
    "https://www.canguinhaal.com.br",
    "https://canguinhaal.com.br",
    "https://web-production-6a008.up.railway.app"
]

if DEBUG:
    testar_redis_em_debug()

APPEND_SLASH = True

# ========================
# üîÅ MIDDLEWARE
# ========================
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'canguinaProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'debug': DEBUG,
        },
    },
]

WSGI_APPLICATION = 'canguinaProject.wsgi.application'

# ========================
# üóÑÔ∏è BANCO DE DADOS
# ========================
DATABASE_URL = os.getenv('DATABASE_URL')
if DATABASE_URL:
    DATABASES = {
        'default': dj_database_url.parse(DATABASE_URL)
    }
    DATABASES['default']['CONN_MAX_AGE'] = 600
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }

# ========================
# üöÄ REDIS & CACHE
# ========================
REDIS_URL_RAW = config('REDIS_URL', default='redis://127.0.0.1:6379').rsplit('/', 1)[0]

if not REDIS_URL_RAW.startswith(('redis://', 'rediss://', 'unix://')):
    raise ValueError(f"‚ùå REDIS_URL inv√°lido: {REDIS_URL_RAW}")

logger.warning(
    f"üõ†Ô∏è Ambiente: {'PRODU√á√ÉO' if not DEBUG else 'DESENVOLVIMENTO'} | Redis em uso: {REDIS_URL_RAW}"
)

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': f"{REDIS_URL_RAW}/1",
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            'SERIALIZER': (
                'django_redis.serializers.pickle.PickleSerializer' if DEBUG
                else 'django_redis.serializers.json.JSONSerializer'
            ),
            'IGNORE_EXCEPTIONS': DEBUG,
            'CONNECTION_POOL_KWARGS': {
                'max_connections': 100,
                'socket_timeout': 120
            },
            'COMPRESSOR': 'django_redis.compressors.zlib.ZlibCompressor',
        }
    }
}

SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
SESSION_CACHE_ALIAS = 'default'

# ========================
# üîê SENHAS E SEGURAN√áA
# ========================
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

LANGUAGE_CODE = 'pt-BR'
TIME_ZONE = 'America/Sao_Paulo'
USE_I18N = True
USE_TZ = True

SECURE_SSL_REDIRECT = not DEBUG
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SESSION_COOKIE_SECURE = not DEBUG
CSRF_COOKIE_SECURE = not DEBUG
SECURE_HSTS_SECONDS = 31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_BROWSER_XSS_FILTER = True
X_FRAME_OPTIONS = 'DENY'

# ========================
# üìÅ ARQUIVOS EST√ÅTICOS E M√çDIA
# ========================
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "ecanguinha/static"]
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ========================
# ‚úÖ APPS INSTALADOS
# ========================
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'whitenoise.runserver_nostatic',
    'ecanguinha.apps.EcanguinhaConfig',
]

if DEBUG:
    INSTALLED_APPS += ['django_extensions']

# ========================
# üì¶ CELERY CONFIG
# ========================
CELERY_BROKER_URL = f"{REDIS_URL_RAW}/0"
CELERY_RESULT_BACKEND = f"{REDIS_URL_RAW}/0"

if not CELERY_BROKER_URL.startswith(('redis://', 'rediss://')):
    raise ValueError(f"‚ùå CELERY_BROKER_URL inv√°lido: {CELERY_BROKER_URL}")
if not CELERY_RESULT_BACKEND.startswith(('redis://', 'rediss://')):
    raise ValueError(f"‚ùå CELERY_RESULT_BACKEND inv√°lido: {CELERY_RESULT_BACKEND}")

CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60

logger.info(f"üöÄ Celery Broker: {CELERY_BROKER_URL}")
logger.info(f"üóÑÔ∏è Celery Backend: {CELERY_RESULT_BACKEND}")
logger.info(f"üîß Cache Redis configurado com: {REDIS_URL_RAW}/1")

# ========================
# ü™µ LOGGING
# ========================
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {'class': 'logging.StreamHandler'},
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
    'loggers': {
        'django': {'handlers': ['console'], 'level': 'DEBUG', 'propagate': True},
        'django.request': {'handlers': ['console'], 'level': 'DEBUG', 'propagate': False},
        'django.template': {'handlers': ['console'], 'level': 'ERROR', 'propagate': False},
        'urllib3': {'handlers': ['console'], 'level': 'ERROR', 'propagate': False},
        'requests': {'handlers': ['console'], 'level': 'ERROR', 'propagate': False},
        'redis': {'handlers': ['console'], 'level': 'DEBUG' if DEBUG else 'ERROR', 'propagate': False},
    }
}