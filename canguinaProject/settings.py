"""
Django settings for canguinaProject project.

Generated by 'django-admin startproject' using Django 5.1.2.
"""

from pathlib import Path
import dj_database_url
import os
from decouple import config # Importe config para ler vari√°veis de ambiente
import logging
from django.core.cache import cache # Mantenha esta importa√ß√£o para uso em views/l√≥gica, mas n√£o no topo do settings

logger = logging.getLogger(__name__)

# --- IN√çCIO: REMOVA OU COMENTE ESTE BLOCO DE TESTE DE CACHE ---
# Este bloco tenta usar o cache antes que ele esteja totalmente configurado pelo Django,
# o que pode levar a erros enganosos ou uso do cache "dummy".
# try:
#     cache.set('teste_log', 'valor_log', timeout=60)
#     valor = cache.get('teste_log')
#     print(f"Valor do cache: {valor}")  # Deve mostrar 'valor_log'
# except Exception as e:
#     print(f"Erro ao acessar o cache: {e}")
# --- FIM: REMOVA OU COMENTE ESTE BLOCO DE TESTE DE CACHE ---


# Base Directory
BASE_DIR = Path(__file__).resolve().parent.parent

# DEBUG - REDIS_URL:
# Railway injeta a REDIS_URL automaticamente.
# Use config para leitura segura da vari√°vel de ambiente.
# Defina um valor padr√£o para desenvolvimento local se n√£o usar Redis localmente,
# ou certifique-se de que sua env local tenha REDIS_URL.
REDIS_URL = config('REDIS_URL', default='redis://localhost:6379/1')
print("DEBUG - REDIS_URL:", REDIS_URL) # Mantido para depura√ß√£o inicial

# Chave Secreta
SECRET_KEY = config('SECRET_KEY', default='django-insecure-o!f&%cc+m5r#4atn@28$b%dve1477nvc((4k^%3uxyde)w1+_5')

# Debug Mode
DEBUG = config('DEBUG', default=False, cast=bool)

# ASGI Application (se voc√™ estiver usando ASGI, como para websockets)
# Se n√£o estiver usando ASGI, pode comentar ou remover.
ASGI_APPLICATION = None # ou 'canguinaProject.asgi.application' se estiver usando ASGI

# Allowed Hosts
ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    '.herokuapp.com', # Se estiver usando Heroku al√©m de Railway
    '.railway.app', # Para aplica√ß√µes no Railway
    'canguinhaal.com.br',
    'www.canguinhaal.com.br'
]

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ecanguinha', # Seu aplicativo
    # Adicione aqui outros aplicativos, se houver
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', # Para servir arquivos est√°ticos de forma eficiente
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'canguinaProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'], # Supondo que voc√™ tenha uma pasta 'templates' na raiz do projeto
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'canguinaProject.wsgi.application'


# Database
# Configura√ß√£o do banco de dados para Railway (PostgreSQL)
# O Railway injeta DATABASE_URL.
DATABASE_URL = config('DATABASE_URL')
DATABASES = {
    'default': dj_database_url.parse(DATABASE_URL)
}


# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalization
LANGUAGE_CODE = 'pt-BR'
TIME_ZONE = 'America/Sao_Paulo'
USE_I18N = True
USE_TZ = True

# Redirecionamento para HTTPS em produ√ß√£o
# SECURE_SSL_REDIRECT = not DEBUG # J√° estava em seu c√≥digo, mantenha assim
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https') # J√° estava em seu c√≥digo, mantenha assim

# Arquivos Est√°ticos e M√≠dia
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "ecanguinha/static"] # Ajuste o caminho se sua pasta est√°tica for diferente
STATIC_ROOT = BASE_DIR / "staticfiles"

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Configura√ß√£o para Whitenoise
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Configura√ß√µes adicionais
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# --- IN√çCIO: CONFIGURA√á√ÉO DO CACHE REDIS ---
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": REDIS_URL, # Usa a vari√°vel REDIS_URL definida acima
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            # 'COMPRESSOR': 'django_redis.compressors.gzip.GzipCompressor', # Opcional: para comprimir dados grandes no cache
            'IGNORE_EXCEPTIONS': True, # Recomendado em produ√ß√£o para que o cache n√£o cause falha total se o Redis estiver inacess√≠vel
        }
    }
}
logger.warning(f"üöÄ Cache Redis configurado com: {REDIS_URL}") # Esta linha agora far√° sentido ap√≥s a configura√ß√£o
# --- FIM: CONFIGURA√á√ÉO DO CACHE REDIS ---


# --- IN√çCIO: CONFIGURA√á√ÉO DE LOGGING ---
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple', # Ou 'verbose' para mais detalhes
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO', # N√≠vel padr√£o para o projeto
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'django.db.backends': { # Para ver queries SQL (mudar para DEBUG se necess√°rio)
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        'sefaz_api': { # Logger espec√≠fico para seu m√≥dulo sefaz_api.py
            'handlers': ['console'],
            'level': 'DEBUG' if DEBUG else 'INFO', # Mais detalhado em DEBUG
            'propagate': False,
        },
        'django_redis': { # Logger para depura√ß√£o do django-redis
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
    }
}
# --- FIM: CONFIGURA√á√ÉO DE LOGGING ---